size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 1
aes(x = x,
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 1,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
?geom_point
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 1,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 3,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
# GA inputs
pop_size <- 20
breed_prop <- 0.3
maxIt <- 20
# Initial population
current_pop <- createPop(pop_size, min_range, max_range)
for (i in 1:maxIt){
# Calculate fitness
current_pop <- calculateFitness(current_pop)
# Highlight selected to breed
current_pop <- selectBreeders(pop = current_pop,
pop_size = pop_size,
breed_prop = breed_prop)
# Highlight reproduction
current_pop <- reproduce(current_pop = current_pop)
# Highlight Mutation
current_pop <- mutate(current_pop = current_pop,
pop_size = pop_size,
mut_chance = 0.2)
# Highlight elitism
current_pop <- elitism(current_pop)
# Highlight extermination
current_pop <- exterminate(current_pop, pop_size)
# New population
# The current population minus those tagged for extermination, become the new
# population. Some individuals are retained from previous generation(s), some
# are newly added.
new_pop <- current_pop[current_pop$exterminated != 1,]
new_pop$label <- 0
new_pop$selected <- 0
new_pop$mutated <- 0
new_pop$elite <- 0
if (i == 1){ #First iteration
total_pop <- current_pop
} else{
# rbind the current population to the total population
total_pop <- rbind(total_pop,
current_pop[!current_pop$id %in% total_pop$id,])
}
current_pop <- new_pop
}
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
total_pop
min(total_pop$fit
)
maxIt <- 100
# Initial population
current_pop <- createPop(pop_size, min_range, max_range)
for (i in 1:maxIt){
# Calculate fitness
current_pop <- calculateFitness(current_pop)
# Highlight selected to breed
current_pop <- selectBreeders(pop = current_pop,
pop_size = pop_size,
breed_prop = breed_prop)
# Highlight reproduction
current_pop <- reproduce(current_pop = current_pop)
# Highlight Mutation
current_pop <- mutate(current_pop = current_pop,
pop_size = pop_size,
mut_chance = 0.2)
# Highlight elitism
current_pop <- elitism(current_pop)
# Highlight extermination
current_pop <- exterminate(current_pop, pop_size)
# New population
# The current population minus those tagged for extermination, become the new
# population. Some individuals are retained from previous generation(s), some
# are newly added.
new_pop <- current_pop[current_pop$exterminated != 1,]
new_pop$label <- 0
new_pop$selected <- 0
new_pop$mutated <- 0
new_pop$elite <- 0
if (i == 1){ #First iteration
total_pop <- current_pop
} else{
# rbind the current population to the total population
total_pop <- rbind(total_pop,
current_pop[!current_pop$id %in% total_pop$id,])
}
current_pop <- new_pop
}
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
current_pop
maxIt <- 30
# Initial population
current_pop <- createPop(pop_size, min_range, max_range)
for (i in 1:maxIt){
# Calculate fitness
current_pop <- calculateFitness(current_pop)
# Highlight selected to breed
current_pop <- selectBreeders(pop = current_pop,
pop_size = pop_size,
breed_prop = breed_prop)
# Highlight reproduction
current_pop <- reproduce(current_pop = current_pop)
# Highlight Mutation
current_pop <- mutate(current_pop = current_pop,
pop_size = pop_size,
mut_chance = 0.2)
# Highlight elitism
current_pop <- elitism(current_pop)
# Highlight extermination
current_pop <- exterminate(current_pop, pop_size)
# New population
# The current population minus those tagged for extermination, become the new
# population. Some individuals are retained from previous generation(s), some
# are newly added.
new_pop <- current_pop[current_pop$exterminated != 1,]
new_pop$label <- 0
new_pop$selected <- 0
new_pop$mutated <- 0
new_pop$elite <- 0
if (i == 1){ #First iteration
total_pop <- current_pop
} else{
# rbind the current population to the total population
total_pop <- rbind(total_pop,
current_pop[!current_pop$id %in% total_pop$id,])
}
current_pop <- new_pop
}
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == round(2*maxIt/3,0),],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
ggplot() +
geom_contour_filled(data = dat,
aes(x = x,
y = y,
z = z),
bins = 20) +
geom_point(data = total_pop[total_pop$gen == 1,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == 5,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == 10,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
geom_point(data = total_pop[total_pop$gen == maxIt,],
size = 5,
shape = 3,
stroke = 2,
aes(x = x,
y = y,
colour = as.factor(gen))) +
labs(title = '2D Ackley function',
fill = 'Z',
colour = 'Generation')
